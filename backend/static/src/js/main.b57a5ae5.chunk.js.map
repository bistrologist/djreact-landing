{"version":3,"sources":["containers/ArticleListView.js","components/Article.js","containers/ArticleDetailView.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["IconText","icon","text","React","createElement","Articles","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","Item","key","title","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","href","id","description","content","listData","i","push","ArticleList","state","articles","axios","get","then","res","setState","Article","this","Component","ArticleDetail","article","articleID","match","params","BaseRouter","exact","path","component","Header","Layout","Content","Footer","CustomLayout","style","position","zIndex","className","theme","mode","defaultSelectedKeys","padding","marginTop","margin","to","minHeight","children","textAlign","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b57a5ae5.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport Articles from '../components/Article';\n\nconst listData = [];\nfor (let i = 0; i < 23; i++) {\n    listData.push({\n        href: 'http://ant.design',\n        title: `ant design part ${i}`,\n        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        description:\n            'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n        content:\n            'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n    });\n}\n\nclass ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n        axios.get('http://127.0.0.1:8000/api/')\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                })\n                console.log(res.data);\n            })\n    }\n\n    render() {\n        return (\n            <Articles data={this.state.articles}/>\n        )\n    }\n}\n\nexport default ArticleList","import React from 'react';\n\nimport { List, Avatar, Space } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\nconst IconText = ({ icon, text }) => (\n    <Space>\n        {React.createElement(icon)}\n        {text}\n    </Space>\n);\n\n\nconst Articles = (props) => {\n    return (\n        <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{\n                onChange: page => {\n                    console.log(page);\n                },\n                pageSize: 3,\n            }}\n            dataSource={props.data}\n            footer={\n                <div>\n                    <b>ant design</b> footer part\n                </div>\n            }\n            renderItem={item => (\n                <List.Item\n                    key={item.title}\n                    actions={[\n                        <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n                        <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\n                        <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n                    ]}\n                    extra={\n                        <img\n                            width={272}\n                            alt=\"logo\"\n                            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                        />\n                    }\n                >\n                    <List.Item.Meta\n                        avatar={<Avatar src={item.avatar} />}\n                        title={<a href={`/${item.id}`}>{item.title}</a>}\n                        description={item.description}\n                    />\n                    {item.content}\n                </List.Item>\n            )}\n        />\n    );\n}\n\nexport default Articles;","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: {}\n    }\n\n    componentDidMount() {\n        const articleID = this.props.match.params.articleID;\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`)\n            .then(res => {\n                this.setState({\n                    article: res.data\n                })\n            })\n    }\n\n    render() {\n        return (\n            <Card title={this.state.article.title}>\n                <p>{this.state.article.content}</p>\n            </Card>\n        )\n    }\n}\n\nexport default ArticleDetail;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport ArticleList from './containers/ArticleListView';\nimport ArticleDetail from './containers/ArticleDetailView';\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArticleList} />\n        <Route exact path='/:articleID' component={ArticleDetail} />\n    </div>\n);\n\nexport default BaseRouter;\n","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n        <Layout>\n            <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                    <Menu.Item key=\"1\">nav 1</Menu.Item>\n                    <Menu.Item key=\"2\">nav 2</Menu.Item>\n                    <Menu.Item key=\"3\">nav 3</Menu.Item>\n                </Menu>\n            </Header>\n            <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item><Link to='/'>Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item><Link to='/'>List</Link></Breadcrumb.Item>\n                </Breadcrumb>\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n                    {props.children}\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n        </Layout>\n    );\n}\n\nexport default CustomLayout;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport BaseRouter from './routes';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport CustomLayout from './containers/Layout';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <CustomLayout>\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}